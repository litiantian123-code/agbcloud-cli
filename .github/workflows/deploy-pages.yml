name: Deploy GitHub Pages

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Prepare install scripts
        run: |
          # Ensure docs directory exists
          mkdir -p docs
          
          # Replace repository placeholders with actual values
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.event.repository.name }}"
          
          echo "Repository info: $REPO_OWNER/$REPO_NAME"
          
          # Replace placeholders in install script
          sed -i "s/{{REPO_OWNER}}/$REPO_OWNER/g" docs/windows
          sed -i "s/{{REPO_NAME}}/$REPO_NAME/g" docs/windows
          
          # Update version in install script if this is a tag
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION="${{ github.ref_name }}"
            echo "Updating version to: $VERSION"
            
            # Update the default version in the install script
            sed -i "s/v0\.1\.0/$VERSION/g" docs/windows
            
            # Update latest.json with current version
            cat > docs/latest.json << EOF
          {
            "version": "$VERSION",
            "tag_name": "$VERSION", 
            "name": "AgbCloud CLI $VERSION",
            "published_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "assets": {
              "windows": {
                "amd64": {
                  "name": "agb-$VERSION-windows-amd64.exe",
                  "download_url": "https://github.com/$REPO_OWNER/$REPO_NAME/releases/download/$VERSION/agb-$VERSION-windows-amd64.exe",
                  "size": 0
                },
                "arm64": {
                  "name": "agb-$VERSION-windows-arm64.exe",
                  "download_url": "https://github.com/$REPO_OWNER/$REPO_NAME/releases/download/$VERSION/agb-$VERSION-windows-arm64.exe", 
                  "size": 0
                }
              }
            },
            "install_commands": {
              "windows": "powershell -Command \\\"irm https://$REPO_OWNER.github.io/$REPO_NAME/windows | iex\\\"",
              "windows_with_version": "powershell -Command \\\"irm https://$REPO_OWNER.github.io/$REPO_NAME/windows | iex\\\" -Version $VERSION"
            }
          }
          EOF
          fi
          
          # Verify files exist
          echo "Files in docs directory:"
          ls -la docs/
          
          echo "Content of docs/windows (first 10 lines):"
          head -10 docs/windows
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4